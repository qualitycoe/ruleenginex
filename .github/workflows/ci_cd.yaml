name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Hatch
        run: pip install hatch

      - name: Run Linters
        run: hatch run lint:all

  test:
    name: Run Tests and Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Hatch
        run: pip install hatch

      - name: Run Tests
        run: hatch run dev:test-cov

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true

  benchmark:
    name: Performance Benchmarking
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Hatch
        run: pip install hatch

      - name: Run Benchmarks
        run: hatch run benchmark:run

  tag:
    name: Create Version Tag
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Version from Hatch
        id: get_version
        run: echo "::set-output name=version::$(hatch version)"

      - name: Create Git Tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a v${{ steps.get_version.outputs.version }} -m "Release v${{ steps.get_version.outputs.version }}"
          git push origin v${{ steps.get_version.outputs.version }}

  build:
    name: Build & Publish Package
    runs-on: ubuntu-latest
    needs: tag
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Hatch
        run: pip install hatch

      - name: Build Package
        run: hatch build

      - name: Publish Package to PyPI
        env:
          HATCH_INDEX_USER: ${{ secrets.PYPI_USERNAME }}
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_PASSWORD }}
        run: hatch publish
